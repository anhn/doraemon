import streamlit as st
import pandas as pd
from pymongo import MongoClient
from datetime import datetime

# K·∫øt n·ªëi MongoDB
MONGO_URI = st.secrets["mongo"]["uri"]
client = MongoClient(MONGO_URI)
db = client["utt_detai25"]
faq_collection = db["faqtuyensinh"]

st.set_page_config(page_title="C·∫≠p nh·∫≠t FAQ t·ª´ Excel", page_icon="üìÑ")
st.title("üìÑ C·∫≠p nh·∫≠t c√¢u tr·∫£ l·ªùi trong FAQ t·ª´ Excel")

# Upload Excel file
uploaded_file = st.file_uploader("T·∫£i l√™n file Excel (ph·∫£i c√≥ c·ªôt 'Question' v√† 'Answer')", type=["xlsx"])

if uploaded_file:
    try:
        df = pd.read_excel(uploaded_file)
        required_columns = {"Question", "Answer"}

        if not required_columns.issubset(df.columns):
            st.error("‚ùå File ph·∫£i ch·ª©a ƒë√∫ng hai c·ªôt: 'Question' v√† 'Answer'.")
        else:
            st.subheader("üìå Xem tr∆∞·ªõc d·ªØ li·ªáu")
            st.dataframe(df.head(10))

            if st.button("üîÑ B·∫Øt ƒë·∫ßu c·∫≠p nh·∫≠t"):
                update_count = 0
                current_time = datetime.utcnow()

                for _, row in df.iterrows():
                    result = faq_collection.update_one(
                        {"Question": row["Question"]},
                        {
                            "$set": {
                                "Answer": row["Answer"],
                                "CreatedAt": current_time,
                                "LastedUpdate": current_time
                            }
                        }
                    )
                    if result.modified_count > 0:
                        update_count += 1

                st.success(f"‚úÖ C·∫≠p nh·∫≠t th√†nh c√¥ng {update_count} b·∫£n ghi trong c∆° s·ªü d·ªØ li·ªáu.")
    except Exception as e:
        st.error(f"L·ªói khi x·ª≠ l√Ω file: {e}")
